name: Build Examples

on:
  workflow_run:
    workflows: ["Build Docker"]
    types: [completed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  Build-Matter:
    runs-on: ubuntu-latest
    container:
      image: espressif/esp-matter:latest
    strategy:
      matrix:
        targets:
        - {example: light, target: esp32c6, prefix: thread_matter, sdkconfig: sdkconfig.defaults.c6_thread}

    steps:
      - run: mkdir -p images
      
      - name: Set Environment Variables
        run: |
          export IDF_PATH=/opt/esp-idf
          export ESP_MATTER_PATH=/opt/esp-matter
          echo "IDF_PATH=$IDF_PATH" >> $GITHUB_ENV
          echo "ESP_MATTER_PATH=$ESP_MATTER_PATH" >> $GITHUB_ENV

      - name: Build application
        run: |
          . $IDF_PATH/export.sh
          . $ESP_MATTER_PATH/export.sh
          cd $ESP_MATTER_PATH/examples/${{ matrix.targets.example }}

          if [ "${{ matrix.targets.sdkconfig }}" != "" ]; then
            idf.py -D SDKCONFIG_DEFAULTS="${{ matrix.targets.sdkconfig }}" set-target ${{ matrix.targets.target }} build
          else
            idf.py set-target ${{ matrix.targets.target }} build
          fi

          cd build

          TARGET_CHIP=$(cat project_description.json | python3 -c 'import sys,json; print(json.load(sys.stdin)["target"])')
          APP_BIN=$(cat project_description.json | python3 -c 'import sys,json; print(json.load(sys.stdin)["app_bin"])')
          OUT_BIN="$GITHUB_WORKSPACE/images/$TARGET_CHIP"_${{ matrix.targets.prefix }}_"$APP_BIN"
          esptool.py --chip $TARGET_CHIP merge_bin -o $OUT_BIN $(cat flash_args | tr '\n' ' ')

          # Record the esp-idf and esp-matter commit
          idf_rev=$(git -C $IDF_PATH rev-parse --short HEAD)
          mtr_rev=$(git -C $ESP_MATTER_PATH rev-parse --short HEAD)
          chip_rev=$(git -C $ESP_MATTER_PATH/connectedhomeip/connectedhomeip rev-parse --short HEAD)
          echo "- esp-idf: [$idf_rev](https://github.com/espressif/esp-idf/tree/$idf_rev)" >> $GITHUB_WORKSPACE/images/.esp-idf
          echo "- esp-matter: [$mtr_rev](https://github.com/espressif/esp-matter/tree/$mtr_rev)" >> $GITHUB_WORKSPACE/images/.esp-matter
          echo "- connectedhomeip: [$chip_rev](https://github.com/project-chip/connectedhomeip/tree/$chip_rev)" >> $GITHUB_WORKSPACE/images/.chip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: build-images-${{ matrix.targets.target }}-${{ matrix.targets.prefix }}-${{ matrix.targets.example }}
          path: images/

  deploy:
    needs:
      - Build-Matter

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    container:
      image: espressif/esp-matter:latest

    steps:
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          pattern: build-images-*
          path: images/
          merge-multiple: true

      - name: Generate Launchpad Config
        run: |
          cd images/
          $ESP_MATTER_PATH/tools/launchpad/generate_launchpad_config.sh ${{ github.repository_owner }}
          echo ${{ github.repository_owner }}

          # Put together the commit IDs used when building the firmwares
          echo "#### Build Config" >> build_cfg.md
          cat .esp-idf >> build_cfg.md
          cat .esp-matter >> build_cfg.md
          cat .chip >> build_cfg.md

          tree -H '.' -L 1 --noreport -T 'ESP Matter Launchpad Artifacts' -shi --charset utf-8 -I "index.html" -o index.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: images/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
